plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.astralai.notepad"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.astralai.notepad.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            // Room exclude
            exclude 'META-INF/atomicfu.kotlin_module'
            // Default exclude
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    hilt {
        enableAggregatingTask = true
    }
}

dependencies {

    // AndroidX
    implementation 'androidx.core:core-ktx:1.7.0'

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0'

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    // Compose tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-data:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    // Compose foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Compose material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Compose material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Compose integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'
    // Compose integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0"
    // Compose Navigation
    implementation "androidx.navigation:navigation-compose:2.4.0-beta02"
    // Compose test
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    // Compose test needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // Dagger Hilt with Kotlin
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    // Dagger Hilt with Kotlin for instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    // Dagger Hilt with Kotlin for local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"
    // Dagger Hilt Navigation
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-beta01'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    // Kotlin Coroutines test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers for Room
    testImplementation "androidx.room:room-testing:$room_version"

    // Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Coil
    implementation 'io.coil-kt:coil-compose:1.4.0'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    // OkHttp test
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    // Accompanist
    // A library that brings WindowInsets support to Jetpack Compose.
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    // A library that provides easy-to-use utilities for recoloring the Android system bars from Jetpack Compose.
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    // A library that provides utilities for building paginated layouts in Jetpack Compose, similar to Android's ViewPager.
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    // A library that provides Android runtime permissions support for Jetpack Compose.
    implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
    // A library that provides easy-to-use modifiers for displaying a placeholder UI while content is loading.
    implementation "com.google.accompanist:accompanist-placeholder:$accompanist_version"
    // A library which provides a way to use Android Drawables as Jetpack Compose Painters.
    implementation "com.google.accompanist:accompanist-drawablepainter:$accompanist_version"
    // A library that provides a layout implementing the swipe-to-refresh UX pattern, similar to Android's SwipeRefreshLayout.
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist_version"

    // Local unit tests
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.test:core:1.4.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "io.mockk:mockk:1.12.1"

    // Instrumentation tests
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation "io.mockk:mockk-android:1.12.1"
    androidTestImplementation 'androidx.test:runner:1.4.0'
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}
